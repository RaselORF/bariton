[{"fixerCustomHeading":"Null Dereference Check","isWarning":"True","functionName":"reachable","projectPath":"/workspace/source","filePath":"/workspace/source/src/api/java/baritone/api/utils/RotationUtils.java","fixerCategoryTag":"FND-1","className":"RotationUtils","priority":"H","scanDate":"Tue Jun 11 03:52:50 GMT 2024","fixerCustomMessageText":"In file: RotationUtils.java, class: RotationUtils, method: reachable, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","fixerCategory":"Null Pointer Issues","selectedNode":"@Deprecated public static Optional<Rotation> reachable(EntityPlayerSP entity,BlockPos pos,double blockReachDistance,boolean wouldSneak){\n  IBaritone baritone=BaritoneAPI.getProvider().getBaritoneForPlayer(entity);\n  IPlayerContext ctx=baritone.getPlayerContext();\n  return reachable(ctx,pos,blockReachDistance,wouldSneak);\n}\n","fixNo":"NPI-H-1","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>RotationUtils.java<\/span>, class: <span class='class_name'>RotationUtils<\/span>, method: <span class='function_name'>reachable<\/span>, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","diffLocations":["RotationUtils.java6067015140936861194.diff"]},{"fixerCustomHeading":"Null Dereference Check","isWarning":"True","functionName":"reachableOffset","projectPath":"/workspace/source","filePath":"/workspace/source/src/api/java/baritone/api/utils/RotationUtils.java","fixerCategoryTag":"FND-1","className":"RotationUtils","priority":"H","scanDate":"Tue Jun 11 03:52:50 GMT 2024","fixerCustomMessageText":"In file: RotationUtils.java, class: RotationUtils, method: reachableOffset, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","fixerCategory":"Null Pointer Issues","selectedNode":"/** \n * Determines if the specified entity is able to reach the specified block with the given offsetted position. The return type will be  {@link Optional#empty()} ifthe entity is unable to reach the block with the offset applied.\n * @param ctx                Context for the viewing entity\n * @param pos                The target block position\n * @param offsetPos          The position of the block with the offset applied.\n * @param blockReachDistance The block reach distance of the entity\n * @return The optional rotation\n */\npublic static Optional<Rotation> reachableOffset(IPlayerContext ctx,BlockPos pos,Vec3d offsetPos,double blockReachDistance,boolean wouldSneak){\n  Vec3d eyes=wouldSneak ? RayTraceUtils.inferSneakingEyePosition(ctx.player()) : ctx.player().getPositionEyes(1.0F);\n  Rotation rotation=calcRotationFromVec3d(eyes,offsetPos,ctx.playerRotations());\n  Rotation actualRotation=BaritoneAPI.getProvider().getBaritoneForPlayer(ctx.player()).getLookBehavior().getAimProcessor().peekRotation(rotation);\n  RayTraceResult result=RayTraceUtils.rayTraceTowards(ctx.player(),actualRotation,blockReachDistance,wouldSneak);\n  if (result != null && result.typeOfHit == RayTraceResult.Type.BLOCK) {\n    if (result.getBlockPos().equals(pos)) {\n      return Optional.of(rotation);\n    }\n    if (ctx.world().getBlockState(pos).getBlock() instanceof BlockFire && result.getBlockPos().equals(pos.down())) {\n      return Optional.of(rotation);\n    }\n  }\n  return Optional.empty();\n}\n","fixNo":"NPI-H-2","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>RotationUtils.java<\/span>, class: <span class='class_name'>RotationUtils<\/span>, method: <span class='function_name'>reachableOffset<\/span>, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","diffLocations":["RotationUtils.java17877807897133331920.diff"]},{"fixerCustomHeading":"Null Dereference Check","isWarning":"True","functionName":"stringToBlockNullable","projectPath":"/workspace/source","filePath":"/workspace/source/src/api/java/baritone/api/utils/BlockUtils.java","fixerCategoryTag":"FND-1","className":"BlockUtils","priority":"H","scanDate":"Tue Jun 11 03:52:50 GMT 2024","fixerCustomMessageText":"In file: BlockUtils.java, class: BlockUtils, method: stringToBlockNullable, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","fixerCategory":"Null Pointer Issues","selectedNode":"public static Block stringToBlockNullable(String name){\n  Block block=resourceCache.get(name);\n  if (block != null) {\n    return block;\n  }\n  if (resourceCache.containsKey(name)) {\n    return null;\n  }\n  block=Block.getBlockFromName(name.contains(\":\") ? name : \"minecraft:\" + name);\n  Map<String,Block> copy=new HashMap<>(resourceCache);\n  copy.put(name,block);\n  resourceCache=copy;\n  return block;\n}\n","fixNo":"NPI-H-3","relatedSourceLocations":["/workspace/source/src/main/java/baritone/cache/CachedRegion.java","/workspace/source/src/main/java/baritone/cache/CachedChunk.java","/workspace/source/src/main/java/baritone/process/BuilderProcess.java","/workspace/source/src/main/java/baritone/utils/BlockStateInterface.java"],"fixerCustomMessage":"In file: <span class='original_filename'>BlockUtils.java<\/span>, class: <span class='class_name'>BlockUtils<\/span>, method: <span class='function_name'>stringToBlockNullable<\/span>, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","diffLocations":["BlockUtils.java1449388559545558284.diff"]},{"fixerCustomHeading":"Null Dereference Check","isWarning":"True","functionName":"widthX","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/process/BuilderProcess.java","fixerCategoryTag":"FND-1","className":"BuilderProcess","priority":"H","scanDate":"Tue Jun 11 03:52:55 GMT 2024","fixerCustomMessageText":"In file: BuilderProcess.java, class: BuilderProcess, method: widthX, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","fixerCategory":"Null Pointer Issues","selectedNode":"@Override public int widthX(){\n  return realSchematic.widthX();\n}\n","fixNo":"NPI-H-4","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>BuilderProcess.java<\/span>, class: <span class='class_name'>BuilderProcess<\/span>, method: <span class='function_name'>widthX<\/span>, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","diffLocations":["BuilderProcess.java314137899959489551.diff"]},{"fixerCustomHeading":"Null Dereference Check","isWarning":"True","functionName":"glColor","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/utils/IRenderer.java","fixerCategoryTag":"FND-1","className":"IRenderer","priority":"H","scanDate":"Tue Jun 11 03:53:04 GMT 2024","fixerCustomMessageText":"In file: IRenderer.java, class: IRenderer, method: glColor, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","fixerCategory":"Null Pointer Issues","selectedNode":"static void glColor(Color color,float alpha){\n  float[] colorComponents=color.getColorComponents(null);\n  IRenderer.color[0]=colorComponents[0];\n  IRenderer.color[1]=colorComponents[1];\n  IRenderer.color[2]=colorComponents[2];\n  IRenderer.color[3]=alpha;\n}\n","fixNo":"NPI-H-5","relatedSourceLocations":["/workspace/source/src/main/java/baritone/selection/SelectionRenderer.java"],"fixerCustomMessage":"In file: <span class='original_filename'>IRenderer.java<\/span>, class: <span class='class_name'>IRenderer<\/span>, method: <span class='function_name'>glColor<\/span>, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","diffLocations":["IRenderer.java9291720582926566343.diff"]},{"fixerCustomHeading":"Null Dereference Check","isWarning":"True","functionName":"create","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/utils/pathing/Avoidance.java","fixerCategoryTag":"FND-1","className":"Avoidance","priority":"H","scanDate":"Tue Jun 11 03:53:04 GMT 2024","fixerCustomMessageText":"In file: Avoidance.java, class: Avoidance, method: create, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","fixerCategory":"Null Pointer Issues","selectedNode":"public static List<Avoidance> create(IPlayerContext ctx){\n  if (!Baritone.settings().avoidance.value) {\n    return Collections.emptyList();\n  }\n  List<Avoidance> res=new ArrayList<>();\n  double mobSpawnerCoeff=Baritone.settings().mobSpawnerAvoidanceCoefficient.value;\n  double mobCoeff=Baritone.settings().mobAvoidanceCoefficient.value;\n  if (mobSpawnerCoeff != 1.0D) {\n    ctx.worldData().getCachedWorld().getLocationsOf(\"mob_spawner\",1,ctx.playerFeet().x,ctx.playerFeet().z,2).forEach(mobspawner -> res.add(new Avoidance(mobspawner,mobSpawnerCoeff,Baritone.settings().mobSpawnerAvoidanceRadius.value)));\n  }\n  if (mobCoeff != 1.0D) {\n    ctx.world().loadedEntityList.stream().filter(entity -> entity instanceof EntityMob).filter(entity -> (!(entity instanceof EntitySpider)) || ctx.player().getBrightness() < 0.5).filter(entity -> !(entity instanceof EntityPigZombie) || ((EntityPigZombie)entity).isAngry()).filter(entity -> !(entity instanceof EntityEnderman) || ((EntityEnderman)entity).isScreaming()).forEach(entity -> res.add(new Avoidance(new BlockPos(entity),mobCoeff,Baritone.settings().mobAvoidanceRadius.value)));\n  }\n  return res;\n}\n","fixNo":"NPI-H-6","relatedSourceLocations":["/workspace/source/src/main/java/baritone/utils/pathing/Favoring.java"],"fixerCustomMessage":"In file: <span class='original_filename'>Avoidance.java<\/span>, class: <span class='class_name'>Avoidance<\/span>, method: <span class='function_name'>create<\/span>, there is a potential Null pointer dereference. This may throw an unexpected null pointer exception which, if unhandled, may crash the program. iCR detected the null pointer issue and demonstrated the full path from the object declaration to the null dereference in the object. A developer should introduce null checks in the appropriate path or initialize the object explicitly.","diffLocations":["Avoidance.java2885512868893816236.diff"]},{"fixerCustomHeading":"Always Synchronize on a private final Field","isWarning":"True","functionName":"queueCacheCulling","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/process/elytra/NetherPathfinderContext.java","fixerCategoryTag":"CUS-2","className":"NetherPathfinderContext","priority":"H","scanDate":"Tue Jun 11 03:52:55 GMT 2024","fixerCustomMessageText":"In file: NetherPathfinderContext.java, method: queueCacheCulling, there is a synchronized block on an improper field. iCR suggested the block to be synchronized on a private and final field. To learn more check CWE-412 and CERT Secure coding standard LCK00-J.","fixerCategory":"Concurrency Issues","selectedNode":"synchronized (this.cullingLock) {\n  boi.chunkPtr=0L;\n  NetherPathfinder.cullFarChunks(this.context,chunkX,chunkZ,maxDistanceBlocks);\n}\n","fixNo":"CI-H-1","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>NetherPathfinderContext.java<\/span>, method: <span class='function_name'>queueCacheCulling<\/span>, there is a synchronized block on an improper field. iCR suggested the block to be synchronized on a private and final field. To learn more check <a href='https://cwe.mitre.org/data/definitions/412' target='_blank'>CWE-412<\/a> and <a href='https://wiki.sei.cmu.edu/confluence/display/java/LCK00-J.+Use+private+final+lock+objects+to+synchronize+classes+that+may+interact+with+untrusted+code' target='_blank'>CERT Secure coding standard LCK00-J<\/a>.","diffLocations":["NetherPathfinderContext.java704624137894361575.diff"]},{"fixerCustomHeading":"Always Synchronize on a private final Field","isWarning":"True","functionName":"onTick","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/process/elytra/ElytraBehavior.java","fixerCategoryTag":"CUS-2","className":"ElytraBehavior","priority":"H","scanDate":"Tue Jun 11 03:53:04 GMT 2024","fixerCustomMessageText":"In file: ElytraBehavior.java, method: onTick, there is a synchronized block on an improper field. iCR suggested the block to be synchronized on a private and final field. To learn more check CWE-412 and CERT Secure coding standard LCK00-J.","fixerCategory":"Concurrency Issues","selectedNode":"synchronized (this.context.cullingLock) {\n  this.onTick0();\n}\n","fixNo":"CI-H-2","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>ElytraBehavior.java<\/span>, method: <span class='function_name'>onTick<\/span>, there is a synchronized block on an improper field. iCR suggested the block to be synchronized on a private and final field. To learn more check <a href='https://cwe.mitre.org/data/definitions/412' target='_blank'>CWE-412<\/a> and <a href='https://wiki.sei.cmu.edu/confluence/display/java/LCK00-J.+Use+private+final+lock+objects+to+synchronize+classes+that+may+interact+with+untrusted+code' target='_blank'>CERT Secure coding standard LCK00-J<\/a>.","diffLocations":["ElytraBehavior.java12513188219867156314.diff"]},{"fixerCustomHeading":"Bad Flow in Switch","isWarning":"False","functionName":"preTick","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/utils/PathingControlManager.java","fixerCategoryTag":"AMB-1","className":"PathingControlManager","priority":"M","scanDate":"Tue Jun 11 03:52:55 GMT 2024","fixerCustomMessageText":"In file: PathingControlManager.java, class: PathingControlManager, the body of a method preTick has a case statement that is not terminated by a break. iCR suggested that a break statement be introduced to terminate the case statement.","fixerCategory":"Inappropriate Logic","selectedNode":"!org.eclipse.jdt.core.dom.SwitchStatement@f78a26d","fixNo":"IL-M-1","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>PathingControlManager.java<\/span>, class: <span class='class_name'>PathingControlManager<\/span>, the body of a method <span class='function_name'>preTick<\/span> has a case statement that is not terminated by a break. iCR suggested that a break statement be introduced to terminate the case statement.","diffLocations":["PathingControlManager.java1055319468302884912.diff"]},{"fixerCustomHeading":"Override Both Object.equals and Object.hashCode","isWarning":"True","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/process/BuilderProcess.java","fixerCategoryTag":"CEH-1","className":"GoalBreak","priority":"M","scanDate":"Tue Jun 11 03:52:55 GMT 2024","fixerCustomMessageText":"In file: BuilderProcess.java, there is a class GoalBreak that contains one of {equals} and {hashCode} implementation. This violates the contract mentioned in the specification for CERT Secure coding standard MET09-J and can create subtle bugs. iCR suggested to override both {equals} and {hashCode} method. To learn more check CWE-581 and Object.hashCode.","fixerCategory":"Inappropriate Logic","selectedNode":"GoalBreak","fixNo":"IL-M-2","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>BuilderProcess.java<\/span>, there is a class <span class='class_name'>GoalBreak<\/span> that contains one of <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> implementation. This violates the contract mentioned in the specification for <a href='https://wiki.sei.cmu.edu/confluence/display/java/MET09-J.+Classes+that+define+an+equals%28%29+method+must+also+define+a+hashCode%28%29+method' target='_blank'>CERT Secure coding standard MET09-J<\/a> and can create subtle bugs. iCR suggested to override both <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> method. To learn more check <a href='https://cwe.mitre.org/data/definitions/581' target='_blank'>CWE-581<\/a> and <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#hashCode()' target='_blank'>Object.hashCode<\/a>.","diffLocations":["BuilderProcess.java4167674427446133952.diff"]},{"fixerCustomHeading":"Override Both Object.equals and Object.hashCode","isWarning":"True","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/process/BuilderProcess.java","fixerCategoryTag":"CEH-1","className":"GoalPlace","priority":"M","scanDate":"Tue Jun 11 03:52:55 GMT 2024","fixerCustomMessageText":"In file: BuilderProcess.java, there is a class GoalPlace that contains one of {equals} and {hashCode} implementation. This violates the contract mentioned in the specification for CERT Secure coding standard MET09-J and can create subtle bugs. iCR suggested to override both {equals} and {hashCode} method. To learn more check CWE-581 and Object.hashCode.","fixerCategory":"Inappropriate Logic","selectedNode":"GoalPlace","fixNo":"IL-M-3","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>BuilderProcess.java<\/span>, there is a class <span class='class_name'>GoalPlace<\/span> that contains one of <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> implementation. This violates the contract mentioned in the specification for <a href='https://wiki.sei.cmu.edu/confluence/display/java/MET09-J.+Classes+that+define+an+equals%28%29+method+must+also+define+a+hashCode%28%29+method' target='_blank'>CERT Secure coding standard MET09-J<\/a> and can create subtle bugs. iCR suggested to override both <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> method. To learn more check <a href='https://cwe.mitre.org/data/definitions/581' target='_blank'>CWE-581<\/a> and <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#hashCode()' target='_blank'>Object.hashCode<\/a>.","diffLocations":["BuilderProcess.java15760815976845435736.diff"]},{"fixerCustomHeading":"Override Both Object.equals and Object.hashCode","isWarning":"True","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/launch/java/baritone/launch/mixins/MixinStateImplementation.java","fixerCategoryTag":"CEH-1","className":"MixinStateImplementation","priority":"M","scanDate":"Tue Jun 11 03:52:56 GMT 2024","fixerCustomMessageText":"In file: MixinStateImplementation.java, there is a class MixinStateImplementation that contains one of {equals} and {hashCode} implementation. This violates the contract mentioned in the specification for CERT Secure coding standard MET09-J and can create subtle bugs. iCR suggested to override both {equals} and {hashCode} method. To learn more check CWE-581 and Object.hashCode.","fixerCategory":"Inappropriate Logic","selectedNode":"MixinStateImplementation","fixNo":"IL-M-4","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>MixinStateImplementation.java<\/span>, there is a class <span class='class_name'>MixinStateImplementation<\/span> that contains one of <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> implementation. This violates the contract mentioned in the specification for <a href='https://wiki.sei.cmu.edu/confluence/display/java/MET09-J.+Classes+that+define+an+equals%28%29+method+must+also+define+a+hashCode%28%29+method' target='_blank'>CERT Secure coding standard MET09-J<\/a> and can create subtle bugs. iCR suggested to override both <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> method. To learn more check <a href='https://cwe.mitre.org/data/definitions/581' target='_blank'>CWE-581<\/a> and <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#hashCode()' target='_blank'>Object.hashCode<\/a>.","diffLocations":["MixinStateImplementation.java11709877553673335014.diff"]},{"fixerCustomHeading":"Override Both Object.equals and Object.hashCode","isWarning":"True","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/process/elytra/ElytraBehavior.java","fixerCategoryTag":"CEH-1","className":"SolverContext","priority":"M","scanDate":"Tue Jun 11 03:53:04 GMT 2024","fixerCustomMessageText":"In file: ElytraBehavior.java, there is a class SolverContext that contains one of {equals} and {hashCode} implementation. This violates the contract mentioned in the specification for CERT Secure coding standard MET09-J and can create subtle bugs. iCR suggested to override both {equals} and {hashCode} method. To learn more check CWE-581 and Object.hashCode.","fixerCategory":"Inappropriate Logic","selectedNode":"SolverContext","fixNo":"IL-M-5","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>ElytraBehavior.java<\/span>, there is a class <span class='class_name'>SolverContext<\/span> that contains one of <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> implementation. This violates the contract mentioned in the specification for <a href='https://wiki.sei.cmu.edu/confluence/display/java/MET09-J.+Classes+that+define+an+equals%28%29+method+must+also+define+a+hashCode%28%29+method' target='_blank'>CERT Secure coding standard MET09-J<\/a> and can create subtle bugs. iCR suggested to override both <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> method. To learn more check <a href='https://cwe.mitre.org/data/definitions/581' target='_blank'>CWE-581<\/a> and <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#hashCode()' target='_blank'>Object.hashCode<\/a>.","diffLocations":["ElytraBehavior.java15944278163512590764.diff"]},{"fixerCustomHeading":"Override Both Object.equals and Object.hashCode","isWarning":"True","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/process/elytra/ElytraBehavior.java","fixerCategoryTag":"CEH-1","className":"FireworkBoost","priority":"M","scanDate":"Tue Jun 11 03:53:04 GMT 2024","fixerCustomMessageText":"In file: ElytraBehavior.java, there is a class FireworkBoost that contains one of {equals} and {hashCode} implementation. This violates the contract mentioned in the specification for CERT Secure coding standard MET09-J and can create subtle bugs. iCR suggested to override both {equals} and {hashCode} method. To learn more check CWE-581 and Object.hashCode.","fixerCategory":"Inappropriate Logic","selectedNode":"FireworkBoost","fixNo":"IL-M-6","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>ElytraBehavior.java<\/span>, there is a class <span class='class_name'>FireworkBoost<\/span> that contains one of <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> implementation. This violates the contract mentioned in the specification for <a href='https://wiki.sei.cmu.edu/confluence/display/java/MET09-J.+Classes+that+define+an+equals%28%29+method+must+also+define+a+hashCode%28%29+method' target='_blank'>CERT Secure coding standard MET09-J<\/a> and can create subtle bugs. iCR suggested to override both <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> method. To learn more check <a href='https://cwe.mitre.org/data/definitions/581' target='_blank'>CWE-581<\/a> and <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#hashCode()' target='_blank'>Object.hashCode<\/a>.","diffLocations":["ElytraBehavior.java16336416579573734316.diff"]},{"fixerCustomHeading":"Override Both Object.equals and Object.hashCode","isWarning":"True","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/selection/Selection.java","fixerCategoryTag":"CEH-1","className":"Selection","priority":"M","scanDate":"Tue Jun 11 03:53:04 GMT 2024","fixerCustomMessageText":"In file: Selection.java, there is a class Selection that contains one of {equals} and {hashCode} implementation. This violates the contract mentioned in the specification for CERT Secure coding standard MET09-J and can create subtle bugs. iCR suggested to override both {equals} and {hashCode} method. To learn more check CWE-581 and Object.hashCode.","fixerCategory":"Inappropriate Logic","selectedNode":"Selection","fixNo":"IL-M-7","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>Selection.java<\/span>, there is a class <span class='class_name'>Selection<\/span> that contains one of <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> implementation. This violates the contract mentioned in the specification for <a href='https://wiki.sei.cmu.edu/confluence/display/java/MET09-J.+Classes+that+define+an+equals%28%29+method+must+also+define+a+hashCode%28%29+method' target='_blank'>CERT Secure coding standard MET09-J<\/a> and can create subtle bugs. iCR suggested to override both <span class='key-word'>equals<\/span> and <span class='key-word'>hashCode<\/span> method. To learn more check <a href='https://cwe.mitre.org/data/definitions/581' target='_blank'>CWE-581<\/a> and <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Object.html#hashCode()' target='_blank'>Object.hashCode<\/a>.","diffLocations":["Selection.java18320913149615163577.diff"]},{"fixerCustomHeading":"Call Super Method","isWarning":"True","functionName":"prepared","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/movement/movements/MovementDiagonal.java","fixerCategoryTag":"CSM-3","className":"MovementDiagonal","priority":"M","scanDate":"Tue Jun 11 03:52:54 GMT 2024","fixerCustomMessageText":"In file: MovementDiagonal.java, class: MovementDiagonal, there is a method prepared that overrides the method defined in its super class. But the implementation does not refer to the overridden method. iCR suggested that proper calls to the method in the super class are made to resolve the problem.","fixerCategory":"Improper Method Call","selectedNode":"@Override protected boolean prepared(MovementState state){\n  return true;\n}\n","fixNo":"IMC-M-1","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>MovementDiagonal.java<\/span>, class: <span class='class_name'>MovementDiagonal<\/span>, there is a method <span class='function_name'>prepared<\/span> that overrides the method defined in its super class. But the implementation does not refer to the overridden method. iCR suggested that proper calls to the method in the super class are made to resolve the problem.","diffLocations":["MovementDiagonal.java5007521765961225146.diff"]},{"fixerCustomHeading":"Use Appropriate Method Parameter","isWarning":"True","functionName":"searchWorld","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/process/MineProcess.java","fixerCategoryTag":"MT-6","className":"MineProcess","priority":"M","scanDate":"Tue Jun 11 03:52:54 GMT 2024","fixerCustomMessageText":"In file: MineProcess.java, method: searchWorld, there is a method call for which the actual parameter does not have the appropriate type. iCR suggested that the actual parameter types should match the one specified in the API.","fixerCategory":"Improper Method Call","selectedNode":"CachedChunk.BLOCKS_TO_KEEP_TRACK_OF.contains(block)","fixNo":"IMC-M-2","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>MineProcess.java<\/span>, method: <span class='function_name'>searchWorld<\/span>, there is a method call for which the actual parameter does not have the appropriate type. iCR suggested that the actual parameter types should match the one specified in the API.","diffLocations":["MineProcess.java7621524201535699004.diff"]},{"fixerCustomHeading":"Use Appropriate Method Parameter","isWarning":"True","functionName":"pack","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/cache/ChunkPacker.java","fixerCategoryTag":"MT-6","className":"ChunkPacker","priority":"M","scanDate":"Tue Jun 11 03:52:59 GMT 2024","fixerCustomMessageText":"In file: ChunkPacker.java, method: pack, there is a method call for which the actual parameter does not have the appropriate type. iCR suggested that the actual parameter types should match the one specified in the API.","fixerCategory":"Improper Method Call","selectedNode":"CachedChunk.BLOCKS_TO_KEEP_TRACK_OF.contains(block)","fixNo":"IMC-M-3","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>ChunkPacker.java<\/span>, method: <span class='function_name'>pack<\/span>, there is a method call for which the actual parameter does not have the appropriate type. iCR suggested that the actual parameter types should match the one specified in the API.","diffLocations":["ChunkPacker.java10283925280675112185.diff"]},{"fixerCustomHeading":"Use Better Directory Creation API","isWarning":"False","functionName":"acquireDependencies","projectPath":"/workspace/source","filePath":"/workspace/source/buildSrc/src/main/java/baritone/gradle/task/ProguardTask.java","fixerCategoryTag":"USA-18","className":"ProguardTask","priority":"M","scanDate":"Tue Jun 11 03:52:58 GMT 2024","fixerCustomMessageText":"In file: ProguardTask.java, there is a method acquireDependencies that uses an API to create a directory which can fail if the parent directory does not exist. iCR suggested to use a better directory creation API such as File.mkdir instead of Path.createDirectories and File.mkdirs instead of Path.createDirectory as the former APIs can create the non-existent parent directory as needed.","fixerCategory":"API Usage Issues","selectedNode":"Files.createDirectory(tempLibraries)","fixNo":"AUI-M-1","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>ProguardTask.java<\/span>, there is a method <span class='function_name'>acquireDependencies<\/span> that uses an API to create a directory which can fail if the parent directory does not exist. iCR suggested to use a better directory creation API such as <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/File.html#mkdir()' target='_blank'>File.mkdir<\/a> instead of <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)' target='_blank'>Path.createDirectories<\/a> and <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/File.html#mkdirs()' target='_blank'>File.mkdirs<\/a> instead of <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)' target='_blank'>Path.createDirectory<\/a> as the former APIs can create the non-existent parent directory as needed.","diffLocations":["ProguardTask.java12381448498203624652.diff"]},{"fixerCustomHeading":"Use Better Directory Creation API","isWarning":"False","functionName":"exec","projectPath":"/workspace/source","filePath":"/workspace/source/buildSrc/src/main/java/baritone/gradle/task/CreateDistTask.java","fixerCategoryTag":"USA-18","className":"CreateDistTask","priority":"M","scanDate":"Tue Jun 11 03:52:58 GMT 2024","fixerCustomMessageText":"In file: CreateDistTask.java, there is a method exec that uses an API to create a directory which can fail if the parent directory does not exist. iCR suggested to use a better directory creation API such as File.mkdir instead of Path.createDirectories and File.mkdirs instead of Path.createDirectory as the former APIs can create the non-existent parent directory as needed.","fixerCategory":"API Usage Issues","selectedNode":"Files.createDirectory(dir)","fixNo":"AUI-M-2","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>CreateDistTask.java<\/span>, there is a method <span class='function_name'>exec<\/span> that uses an API to create a directory which can fail if the parent directory does not exist. iCR suggested to use a better directory creation API such as <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/File.html#mkdir()' target='_blank'>File.mkdir<\/a> instead of <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createDirectories(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)' target='_blank'>Path.createDirectories<\/a> and <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/File.html#mkdirs()' target='_blank'>File.mkdirs<\/a> instead of <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createDirectory(java.nio.file.Path,java.nio.file.attribute.FileAttribute...)' target='_blank'>Path.createDirectory<\/a> as the former APIs can create the non-existent parent directory as needed.","diffLocations":["CreateDistTask.java10877975524176367968.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/Baritone.java","fixerCategoryTag":"LFA-1","className":"Baritone","priority":"L","scanDate":"Tue Jun 11 03:52:51 GMT 2024","fixerCustomMessageText":"In file: Baritone.java, class: Baritone has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 6 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public BlockStateInterface bsi;\n","fixNo":"OV-L-1","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>Baritone.java<\/span>, class: <span class='class_name'>Baritone<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>6<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["GameEventHandler.java18167757089719320642.diff","Baritone.java10881834651601711883.diff","MineProcess.java2120734852354149828.diff","GetToBlockProcess.java4442831615541799383.diff","PathExecutor.java3949775868082037024.diff","InventoryBehavior.java15775150839458317883.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/behavior/Behavior.java","fixerCategoryTag":"LFA-1","className":"Behavior","priority":"L","scanDate":"Tue Jun 11 03:52:51 GMT 2024","fixerCustomMessageText":"In file: Behavior.java, class: Behavior has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 6 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public final Baritone baritone;\n","fixNo":"OV-L-2","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>Behavior.java<\/span>, class: <span class='class_name'>Behavior<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>6<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["WaypointBehavior.java16829663246286334276.diff","PathExecutor.java545343500168981273.diff","Behavior.java5267081092656930863.diff","InventoryBehavior.java12102105846719565847.diff","PathingBehavior.java16495863093323303006.diff","InputOverrideHandler.java1530131929037778526.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/cache/WorldData.java","fixerCategoryTag":"LFA-1","className":"WorldData","priority":"L","scanDate":"Tue Jun 11 03:52:51 GMT 2024","fixerCustomMessageText":"In file: WorldData.java, class: WorldData has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 2 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public final CachedWorld cache;\n","fixNo":"OV-L-3","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>WorldData.java<\/span>, class: <span class='class_name'>WorldData<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>2<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["BlockStateInterface.java1119281697501726993.diff","WorldData.java14811235614833668846.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/calc/PathNode.java","fixerCategoryTag":"LFA-1","className":"PathNode","priority":"L","scanDate":"Tue Jun 11 03:52:52 GMT 2024","fixerCustomMessageText":"In file: PathNode.java, class: PathNode has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 3 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"/** \n * Total cost of getting from start to here Mutable and changed by PathFinder\n */\npublic double cost;\n","fixNo":"OV-L-4","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>PathNode.java<\/span>, class: <span class='class_name'>PathNode<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>3<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["AStarPathFinder.java8843940236114350468.diff","PathNode.java855915980043205119.diff","Path.java816517621638444725.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/calc/PathNode.java","fixerCategoryTag":"LFA-1","className":"PathNode","priority":"L","scanDate":"Tue Jun 11 03:52:52 GMT 2024","fixerCustomMessageText":"In file: PathNode.java, class: PathNode has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 2 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"/** \n * In the graph search, what previous node contributed to the cost Mutable and changed by PathFinder\n */\npublic PathNode previous;\n","fixNo":"OV-L-5","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>PathNode.java<\/span>, class: <span class='class_name'>PathNode<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>2<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["Path.java1623929925807570372.diff","PathNode.java9353294246850642516.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/calc/PathNode.java","fixerCategoryTag":"LFA-1","className":"PathNode","priority":"L","scanDate":"Tue Jun 11 03:52:52 GMT 2024","fixerCustomMessageText":"In file: PathNode.java, class: PathNode has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 2 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"/** \n * Where is this node in the array flattenization of the binary heap? Needed for decrease-key operations.\n */\npublic int heapPosition;\n","fixNo":"OV-L-6","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>PathNode.java<\/span>, class: <span class='class_name'>PathNode<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>2<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["PathNode.java8870618081760595269.diff","BinaryHeapOpenSet.java10442880299866782808.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/calc/PathNode.java","fixerCategoryTag":"LFA-1","className":"PathNode","priority":"L","scanDate":"Tue Jun 11 03:52:53 GMT 2024","fixerCustomMessageText":"In file: PathNode.java, class: PathNode has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 4 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"/** \n * Should always be equal to estimatedCosttoGoal + cost Mutable and changed by PathFinder\n */\npublic double combinedCost;\n","fixNo":"OV-L-7","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>PathNode.java<\/span>, class: <span class='class_name'>PathNode<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>4<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["PathNode.java4785798107810932913.diff","AStarPathFinder.java5896550634052184968.diff","BinaryHeapOpenSet.java7852108689087141829.diff","LinkedListOpenSet.java13775350292140759732.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/movement/CalculationContext.java","fixerCategoryTag":"LFA-1","className":"CalculationContext","priority":"L","scanDate":"Tue Jun 11 03:52:53 GMT 2024","fixerCustomMessageText":"In file: CalculationContext.java, class: CalculationContext has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 3 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public int maxFallHeightNoWater;\n","fixNo":"OV-L-8","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>CalculationContext.java<\/span>, class: <span class='class_name'>CalculationContext<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>3<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["ElytraProcess.java235458031153519304.diff","MovementDescend.java14886943024987605490.diff","CalculationContext.java15586887116858873317.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/movement/CalculationContext.java","fixerCategoryTag":"LFA-1","className":"CalculationContext","priority":"L","scanDate":"Tue Jun 11 03:52:53 GMT 2024","fixerCustomMessageText":"In file: CalculationContext.java, class: CalculationContext has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 3 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public boolean allowFallIntoLava;\n","fixNo":"OV-L-9","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>CalculationContext.java<\/span>, class: <span class='class_name'>CalculationContext<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>3<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["ElytraProcess.java8724315710442716080.diff","CalculationContext.java5090452685071161796.diff","MovementDescend.java4293838239147423890.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/movement/CalculationContext.java","fixerCategoryTag":"LFA-1","className":"CalculationContext","priority":"L","scanDate":"Tue Jun 11 03:52:53 GMT 2024","fixerCustomMessageText":"In file: CalculationContext.java, class: CalculationContext has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 3 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public int minFallHeight;\n","fixNo":"OV-L-10","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>CalculationContext.java<\/span>, class: <span class='class_name'>CalculationContext<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>3<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["ElytraProcess.java3004274518383846721.diff","MovementDescend.java17841053086859511450.diff","CalculationContext.java13740273630921237104.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/movement/CalculationContext.java","fixerCategoryTag":"LFA-1","className":"CalculationContext","priority":"L","scanDate":"Tue Jun 11 03:52:53 GMT 2024","fixerCustomMessageText":"In file: CalculationContext.java, class: CalculationContext has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 3 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public double backtrackCostFavoringCoefficient;\n","fixNo":"OV-L-11","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>CalculationContext.java<\/span>, class: <span class='class_name'>CalculationContext<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>3<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["BuilderProcess.java8526567129984478872.diff","Favoring.java16442999394062044470.diff","CalculationContext.java9346964789564930565.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/movement/CalculationContext.java","fixerCategoryTag":"LFA-1","className":"CalculationContext","priority":"L","scanDate":"Tue Jun 11 03:52:53 GMT 2024","fixerCustomMessageText":"In file: CalculationContext.java, class: CalculationContext has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 4 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public double jumpPenalty;\n","fixNo":"OV-L-12","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>CalculationContext.java<\/span>, class: <span class='class_name'>CalculationContext<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>4<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["MovementParkour.java18229539862606852720.diff","BuilderProcess.java9873637891916178577.diff","MovementAscend.java16155935315098648418.diff","CalculationContext.java15206719066632912659.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/utils/PathingCommandContext.java","fixerCategoryTag":"LFA-1","className":"PathingCommandContext","priority":"L","scanDate":"Tue Jun 11 03:52:55 GMT 2024","fixerCustomMessageText":"In file: PathingCommandContext.java, class: PathingCommandContext has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 2 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public final CalculationContext desiredCalcContext;\n","fixNo":"OV-L-13","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>PathingCommandContext.java<\/span>, class: <span class='class_name'>PathingCommandContext<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>2<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["PathingBehavior.java11172875294041807973.diff","PathingCommandContext.java8764422378099640902.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/utils/pathing/MutableMoveResult.java","fixerCategoryTag":"LFA-1","className":"MutableMoveResult","priority":"L","scanDate":"Tue Jun 11 03:52:56 GMT 2024","fixerCustomMessageText":"In file: MutableMoveResult.java, class: MutableMoveResult has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 4 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public int x;\n","fixNo":"OV-L-14","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>MutableMoveResult.java<\/span>, class: <span class='class_name'>MutableMoveResult<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>4<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["Moves.java18013019110391073875.diff","MovementParkour.java9002343145938656664.diff","MovementDescend.java4908970689089052852.diff","MutableMoveResult.java15504097651099769219.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/utils/pathing/MutableMoveResult.java","fixerCategoryTag":"LFA-1","className":"MutableMoveResult","priority":"L","scanDate":"Tue Jun 11 03:52:56 GMT 2024","fixerCustomMessageText":"In file: MutableMoveResult.java, class: MutableMoveResult has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 6 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public int y;\n","fixNo":"OV-L-15","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>MutableMoveResult.java<\/span>, class: <span class='class_name'>MutableMoveResult<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>6<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["MovementDiagonal.java13629831966346670023.diff","MutableMoveResult.java1225848774352537875.diff","Moves.java7548713872046742047.diff","MovementParkour.java17888280495300142563.diff","MovementFall.java4882537105293195187.diff","MovementDescend.java2151751351705224421.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/utils/pathing/MutableMoveResult.java","fixerCategoryTag":"LFA-1","className":"MutableMoveResult","priority":"L","scanDate":"Tue Jun 11 03:52:56 GMT 2024","fixerCustomMessageText":"In file: MutableMoveResult.java, class: MutableMoveResult has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 4 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public int z;\n","fixNo":"OV-L-16","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>MutableMoveResult.java<\/span>, class: <span class='class_name'>MutableMoveResult<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>4<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["Moves.java7816587437387141862.diff","MovementDescend.java11987456837478542799.diff","MovementParkour.java15283461639959082287.diff","MutableMoveResult.java7929923383054828892.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/utils/pathing/MutableMoveResult.java","fixerCategoryTag":"LFA-1","className":"MutableMoveResult","priority":"L","scanDate":"Tue Jun 11 03:52:56 GMT 2024","fixerCustomMessageText":"In file: MutableMoveResult.java, class: MutableMoveResult has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 7 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public double cost;\n","fixNo":"OV-L-17","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>MutableMoveResult.java<\/span>, class: <span class='class_name'>MutableMoveResult<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>7<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["MutableMoveResult.java7712685368649424082.diff","AStarPathFinder.java13193700305822468603.diff","MovementDescend.java5451406317154890232.diff","MovementParkour.java10686628318996301814.diff","MovementDiagonal.java4704369214609723969.diff","MovementFall.java9303836137864343409.diff","Moves.java1913495927354594614.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/api/java/baritone/api/utils/MyChunkPos.java","fixerCategoryTag":"LFA-1","className":"MyChunkPos","priority":"L","scanDate":"Tue Jun 11 03:52:58 GMT 2024","fixerCustomMessageText":"In file: MyChunkPos.java, class: MyChunkPos has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 2 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"@SerializedName(\"z\") public int z;\n","fixNo":"OV-L-18","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>MyChunkPos.java<\/span>, class: <span class='class_name'>MyChunkPos<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>2<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["ExploreProcess.java5216385418539388965.diff","MyChunkPos.java10305453962829557850.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/api/java/baritone/api/utils/MyChunkPos.java","fixerCategoryTag":"LFA-1","className":"MyChunkPos","priority":"L","scanDate":"Tue Jun 11 03:52:58 GMT 2024","fixerCustomMessageText":"In file: MyChunkPos.java, class: MyChunkPos has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 2 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"@SerializedName(\"x\") public int x;\n","fixNo":"OV-L-19","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>MyChunkPos.java<\/span>, class: <span class='class_name'>MyChunkPos<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>2<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["ExploreProcess.java9155213571955147237.diff","MyChunkPos.java6425277733702811058.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/pathing/movement/MovementState.java","fixerCategoryTag":"LFA-1","className":"MovementTarget","priority":"L","scanDate":"Tue Jun 11 03:53:01 GMT 2024","fixerCustomMessageText":"In file: MovementState.java, class: MovementTarget has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 2 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"/** \n * Yaw and pitch angles that must be matched\n */\npublic Rotation rotation;\n","fixNo":"OV-L-20","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>MovementState.java<\/span>, class: <span class='class_name'>MovementTarget<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>2<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["MovementTraverse.java334899802429381862.diff","MovementState.java14064923487262661262.diff"]},{"fixerCustomHeading":"Encapsulation Problem","isWarning":"False","functionName":null,"projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/process/elytra/ElytraBehavior.java","fixerCategoryTag":"LFA-1","className":"ElytraBehavior","priority":"L","scanDate":"Tue Jun 11 03:53:04 GMT 2024","fixerCustomMessageText":"In file: ElytraBehavior.java, class: ElytraBehavior has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in 2 files to resolve the problem. For more information, read CERT Secure coding standard OBJ01-J.","fixerCategory":"Object Visibility","selectedNode":"public boolean landingMode;\n","fixNo":"OV-L-21","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>ElytraBehavior.java<\/span>, class: <span class='class_name'>ElytraBehavior<\/span> has a field that is declared as public but it may allow unwarranted access. The access to the field should be restricted and should only be through accessor methods. iCR suggested changes in <span class='diff_locations'>2<\/span> files to resolve the problem. For more information, read <a href='https://wiki.sei.cmu.edu/confluence/display/java/OBJ01-J.+Limit+accessibility+of+fields' target='_blank'>CERT Secure coding standard OBJ01-J<\/a>.","diffLocations":["ElytraProcess.java7197655726635619211.diff","ElytraBehavior.java11408923363629664396.diff"]},{"fixerCustomHeading":"Unchecked Method Return Value","isWarning":"True","functionName":"onTick","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/behavior/InventoryBehavior.java","fixerCategoryTag":"CRR-1","className":"InventoryBehavior","priority":"L","scanDate":"Tue Jun 11 03:52:51 GMT 2024","fixerCustomMessageText":"In file: InventoryBehavior.java, there is a method onTick that returns one or more error return value(s) that have not been checked properly. iCR suggested that the checks be done properly. To learn more about the consequences of unchecked return value, read CWE-252.","fixerCategory":"Improper Method Call","selectedNode":"firstValidThrowaway()","fixNo":"IMC-L-1","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>InventoryBehavior.java<\/span>, there is a method <span class='function_name'>onTick<\/span> that returns one or more error return value(s) that have not been checked properly. iCR suggested that the checks be done properly. To learn more about the consequences of unchecked return value, read <a href='https://cwe.mitre.org/data/definitions/252.html' target='_blank'>CWE-252<\/a>.","diffLocations":["InventoryBehavior.java13572101005420316293.diff"]},{"fixerCustomHeading":"Unchecked Method Return Value","isWarning":"True","functionName":"execute","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/command/defaults/ProcCommand.java","fixerCategoryTag":"CRR-1","className":"ProcCommand","priority":"L","scanDate":"Tue Jun 11 03:52:59 GMT 2024","fixerCustomMessageText":"In file: ProcCommand.java, there is a method execute that returns one or more error return value(s) that have not been checked properly. iCR suggested that the checks be done properly. To learn more about the consequences of unchecked return value, read CWE-252.","fixerCategory":"Improper Method Call","selectedNode":"process.priority()","fixNo":"IMC-L-2","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>ProcCommand.java<\/span>, there is a method <span class='function_name'>execute<\/span> that returns one or more error return value(s) that have not been checked properly. iCR suggested that the checks be done properly. To learn more about the consequences of unchecked return value, read <a href='https://cwe.mitre.org/data/definitions/252.html' target='_blank'>CWE-252<\/a>.","diffLocations":["ProcCommand.java11851512561356848192.diff"]},{"fixerCustomHeading":"Use Better API for Empty String Check","isWarning":"False","functionName":"BlockOptionalMeta","projectPath":"/workspace/source","filePath":"/workspace/source/src/api/java/baritone/api/utils/BlockOptionalMeta.java","fixerCategoryTag":"ESC-1","className":"BlockOptionalMeta","priority":"L","scanDate":"Tue Jun 11 03:52:50 GMT 2024","fixerCustomMessageText":"In file: BlockOptionalMeta.java, there is a method BlockOptionalMeta that checks if a {String} is empty using {equals} method. It is better to do the emptiness check using String.equals method as it has less overhead than String.isEmpty method. iCR fixed the issue by using the {String.isEmpty()} method.","fixerCategory":"API Usage Issues","selectedNode":"props.equals(\"\")","fixNo":"AUI-L-1","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>BlockOptionalMeta.java<\/span>, there is a method <span class='function_name'>BlockOptionalMeta<\/span> that checks if a <span class='key-word'>String<\/span> is empty using <span class='key-word'>equals<\/span> method. It is better to do the emptiness check using <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#equals(java.lang.Object)' target='_blank'>String.equals<\/a> method as it has less overhead than <a href='https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#isEmpty()' target='_blank'>String.isEmpty<\/a> method. iCR fixed the issue by using the <span class='key-word'>String.isEmpty()<\/span> method.","diffLocations":["BlockOptionalMeta.java3804397669419179411.diff"]},{"fixerCustomHeading":"Use Safer JSON APIs","isWarning":"False","functionName":"onRender","projectPath":"/workspace/source","filePath":"/workspace/source/src/main/java/baritone/utils/GuiClick.java","fixerCategoryTag":"UJMC-1","className":"GuiClick","priority":"L","scanDate":"Tue Jun 11 03:53:04 GMT 2024","fixerCustomMessageText":"In file: GuiClick.java, class: GuiClick, method: onRender, there are JSON APIs which throw org.json.JSONException in absence of corresponding JSON field. This may crash the program if unhandled. iCR fixed the issue by using safer JSON APIs instead which does not throw an exception in absence of a JSON field. To learn more about the JSON APIs check org.json.JSONObject.","fixerCategory":"API Usage Issues","selectedNode":"public void onRender(){\n  GlStateManager.getFloat(GL_MODELVIEW_MATRIX,(FloatBuffer)MODELVIEW.clear());\n  GlStateManager.getFloat(GL_PROJECTION_MATRIX,(FloatBuffer)PROJECTION.clear());\n  GlStateManager.glGetInteger(GL_VIEWPORT,(IntBuffer)VIEWPORT.clear());\n  if (currentMouseOver != null) {\n    Entity e=mc.getRenderViewEntity();\n    PathRenderer.drawManySelectionBoxes(e,Collections.singletonList(currentMouseOver),Color.CYAN);\n    if (clickStart != null && !clickStart.equals(currentMouseOver)) {\n      IRenderer.startLines(Color.RED,Baritone.settings().pathRenderLineWidthPixels.value,true);\n      BetterBlockPos a=new BetterBlockPos(currentMouseOver);\n      BetterBlockPos b=new BetterBlockPos(clickStart);\n      IRenderer.emitAABB(new AxisAlignedBB(Math.min(a.x,b.x),Math.min(a.y,b.y),Math.min(a.z,b.z),Math.max(a.x,b.x) + 1,Math.max(a.y,b.y) + 1,Math.max(a.z,b.z) + 1));\n      IRenderer.endLines(true);\n    }\n  }\n}\n","fixNo":"AUI-L-2","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>GuiClick.java<\/span>, class: <span class='class_name'>GuiClick<\/span>, method: <span class='function_name'>onRender<\/span>, there are JSON APIs which throw <a href='https://stleary.github.io/JSON-java/org/json/JSONException.html' target='_blank'>org.json.JSONException<\/a> in absence of corresponding JSON field. This may crash the program if unhandled. iCR fixed the issue by using safer JSON APIs instead which does not throw an exception in absence of a JSON field. To learn more about the JSON APIs check <a href='https://stleary.github.io/JSON-java/org/json/JSONObject.html' target='_blank'>org.json.JSONObject<\/a>.","diffLocations":["GuiClick.java5606339581010641020.diff"]},{"fixerCustomHeading":"Fix Equality Check","isWarning":"False","functionName":"Settings","projectPath":"/workspace/source","filePath":"/workspace/source/src/api/java/baritone/api/Settings.java","fixerCategoryTag":"FEC-6","className":"Settings","priority":"L","scanDate":"Tue Jun 11 03:52:50 GMT 2024","fixerCustomMessageText":"In file: Settings.java, there is a logical expression which uses the equals method for checking object equality for classes. iCR suggested that a reference equality check is appropriate in this case and introduced the check.","fixerCategory":"Inappropriate Logic","selectedNode":"field.getType().equals(Setting.class)","fixNo":"IL-L-1","relatedSourceLocations":null,"fixerCustomMessage":"In file: <span class='original_filename'>Settings.java<\/span>, there is a logical expression which uses the equals method for checking object equality for classes. iCR suggested that a reference equality check is appropriate in this case and introduced the check.","diffLocations":["Settings.java11363120444554828055.diff"]}]